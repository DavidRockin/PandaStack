<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UjVPT09KTExMV0pKSk9FRUU0Pj4+HTk5OQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/f38ce3t7V3Z2
        dohubm6yampqwWNjY7ZfX1+JYWFhOnx8fEh+fn6ykpKS7bS0tPnExMT/wcHB/6ioqPl2dnbtW1tbslhY
        WEhTU1M6VFRUiVFRUbZNTU3BSUlJskdHR4hDQ0NXQEBAHAAAAAAAAAAAAAAAAAAAAACSkpIHm5ubF5iY
        mEOTk5OOjY2NxoqKiuqDg4P5eHh48HNzc8V3d3d2fX19dn9/f8WTk5PxtbW1+sbGxv/ExMT/rKys+np6
        evFhYWHFY2NjdmhoaHZpaWnFampq8Gtra/loaGjqX19fxlhYWI5UVFRDTk5OF0lJSQcAAAAAAAAAAJub
        mxefn59FpqamfqysrMOzs7PsvLy8+LW1tf2fn5/6j4+P6YWFhct/f3/LgICA6ZKSkvmzs7P8wsLC/8HB
        wf+rq6v8fn5++WhoaOlpaWnLdnZ2y4mJiemZmZn6p6en/aCgoPiEhITsb29vw19fX35OTk5FRkZGFgAA
        AAAAAAAAoaGhHqGhoVyoqKicsbGx3b6+vv7Q0ND+zs7O/7e3t/+lpaX8mJiY+JKSkviUlJT8oaGh/ri4
        uP7CwsL/wcHB/7Kysv6SkpL+gYGB/IGBgfiMjIz4oKCg/LKysv/FxcX/ubm5/o+Pj/50dHTdYmJinFNT
        U1xMTEweAAAAAAAAAACkpKQfpKSkXaenp5yoqKjdtLS0/srKyv7Ozs7/wcHB/7q6uv64uLj8uLi4/Lq6
        uv6/v7/+xMTE/sTExP/Dw8P/wMDA/ra2tv6xsbH+rq6u/LCwsPyzs7P+urq6/8XFxf+0tLT+h4eH/m1t
        bd1lZWWcXl5eXF1dXR4AAAAAAAAAAKamphenp6dGpqamfqWlpb6vr6/nxcXF9svLy//FxcX/w8PD/8XF
        xf/IyMj/ysrK/8nJyf/CwsL/vr6+/729vf+/v7//xMTE/8XFxf/CwsL/v7+//7u7u/+6urr/vr6+/62t
        rfaBgYHnaWlpvmVlZX5kZGRFZGRkFwAAAAAAAAAAtra2B6amphenp6dAqKiogbGxsbnBwcHnxcXF/8HB
        wf/BwcH/w8PD/8TExP/Gxsb/wcHB/7W1tf+urq7/ra2t/7Gxsf+8vLz/wMDA/76+vv+7u7v/t7e3/7Oz
        s/+wsLD/o6Oj54CAgLlnZ2eBZGRkQGRkZBdtbW0HAAAAAKCgoDOYmJg0kJCQN5iYmFKhoaGFr6+vtr+/
        v+bExMT/wcHB/8HBwf/Dw8P/wsLC+76+vvS2trborKys2KWlpdCjo6PQqKio2LCwsOi1tbX0urq6+7q6
        uv+2trb/srKy/62trf+fn5/mfHx8tmJiYoVaWlpSU1NTN05OTjRQUFAzoKCgmZqamp2QkJCmkpKStJmZ
        mcmqqqrewcHB88jIyP/ExMT/w8PD/8bGxv/BwcHzsbGx3qamprujo6OKn5+fcpqamnKbm5uKm5ubu6Wl
        pd62trbzvLy8/7m5uf+2trb/s7Oz/6GhofN5eXneX19fyVhYWLRTU1OlUVFRnVBQUJmmpqbZpqam3aSk
        pOWkpKTrqKio8LKysvXDw8P7yMjI/8bGxv/ExMT/w8PD/7u7u+ioqKi7mpqaiJiYmE+RkZEzjIyMM4uL
        i0+NjY2Im5ubu7Gxsei4uLj/urq6/7q6uv+3t7f/qKio+4mJifV4eHjwd3d3625ubuVcXFzcU1NT2bS0
        tPG7u7vyx8fH9srKyvjGxsb6xMTE+8bGxv3Gxsb/yMjI/8TExP+6urr/sbGx2KSkpIqUlJRPkZGRJYeH
        hxGHh4cRioqKJY6Ojk+bm5uKqamp2LCwsP+5ubn/vLy8/7e3t/+ysrL9q6ur+6qqqvqxsbH4np6e9XBw
        cPJaWlrxvLy8/cbGxv3Z2dn+3d3d/9XV1f/Nzc3/x8fH/8XFxf/Jycn/w8PD/7Ozs/+oqKjQnJyccoeH
        hzN4eHgRAAAAAAAAAACHh4cRkZGRM5ycnHKkpKTQra2t/7m5uf+9vb3/t7e3/7i4uP+8vLz/w8PD/83N
        zf+2trb+fHx8/WBgYP2+vr79ycnJ/dzc3P7g4OD/19fX/8/Pz//Jycn/x8fH/8nJyf/BwcH/r6+v/6Gh
        odCWlpZyfX19M3h4eBEAAAAAAAAAAIeHhxGRkZEzn5+fcqamptCvr6//u7u7/76+vv+5ubn/urq6/7+/
        v//Hx8f/0tLS/7y8vP6CgoL9ZWVl/cDAwPHJycny1tbW9tra2vjR0dH6zc3N+8zMzP3Kysr/ysrK/8LC
        wv+xsbH/o6Oj2JKSkop+fn5PfHx8JWlpaRFpaWkRioqKJY6Ojk+fn5+Kq6ur2LS0tP+9vb3/v7+//729
        vf+7u7v9uLi4+7q6uvrCwsL4sbGx9YODg/JtbW3xw8PD2cXFxd3KysrlycnJ68XFxfDFxcX1zs7O+9DQ
        0P/MzMz/xMTE/7m5uf+qqqrokZGRu35+foh7e3tPc3NzM3NzczOBgYFPi4uLiJ2dnbuzs7PovLy8/7+/
        v//BwcH/xMTE/7u7u/ujo6P1mZmZ8JqamuuTk5PlgYGB3Hl5ednExMSZxMTEncHBwabAwMC0vr6+ycPD
        w97Pz8/z0tLS/8zMzP/Gxsb/wMDA/7Ozs/OcnJzej4+Pu4yMjIqLi4tyi4uLcpSUlIqZmZm7p6en3rm5
        ufPAwMD/wMDA/8DAwP/Dw8P/uLi485mZmd6GhobJhISEtIKCgqWAgICdgICAmcPDwzPExMQ0w8PDN8HB
        wVK/v7+Fx8fHts/Pz+bQ0ND/zMzM/8jIyP/ExMT/vr6++7GxsfSnp6fonJyc2JiYmNCZmZnQo6Oj2K+v
        r+i5ubn0wMDA+8HBwf/AwMD/vb29/7u7u/+xsbHmmJiYtoaGhoWDg4NSgoKCN39/fzR9fX0zAAAAANvb
        2wfIyMgXv7+/QMLCwoHHx8e50NDQ59LS0v/Ozs7/y8vL/8rKyv/IyMj/wsLC/7m5uf+urq7/qamp/6qq
        qv+ysrL/vr6+/8bGxv/Gxsb/xcXF/8LCwv+/v7//urq6/6+vr+eTk5O5fn5+gXh4eEBvb28XbW1tBwAA
        AAAAAAAAyMjIF8XFxUbCwsJ+wcHBvsbGxufS0tL21tbW/9LS0v/Q0ND/0dHR/9LS0v/Q0ND/zc3N/8jI
        yP/FxcX/xMTE/8jIyP/Nzc3/0NDQ/83Nzf/Ly8v/x8fH/8XFxf/CwsL/sbGx9oyMjOd3d3e+cXFxfm9v
        b0VkZGQXAAAAAAAAAADFxcUfxcXFXcfHx5zHx8fdzc3N/tjY2P7b29v/1tbW/9PT0/7R0dH80dHR/NHR
        0f7S0tL+1NTU/tPT0//S0tL/0dHR/s7Ozv7Ly8v+x8fH/MfHx/zIyMj+ysrK/8zMzP+8vLz+mJiY/oOD
        g918fHycdHR0XG5ubh4AAAAAAAAAAMzMzB7Kyspczs7OnNPT093Z2dn+4uLi/uLi4v/a2tr/0tLS/MnJ
        yfjExMT4wsLC/MbGxv7Q0ND+09PT/9LS0v/Ly8v+vr6+/ra2tvy0tLT4uLi4+MPDw/zOzs7/2NjY/9DQ
        0P60tLT+oKCg3ZCQkJx/f39cf39/HgAAAAAAAAAAyMjIF8vLy0XQ0NB+1tbWw9ra2uzg4OD439/f/djY
        2PrQ0NDpxsbGy729vcu8vLzpwsLC+c/Pz/zV1dX/1NTU/8rKyvy3t7f5rKys6aurq8uxsbHLvb296cbG
        xvrQ0ND9zMzM+Lu7u+ysrKzDmpqafoWFhUWLi4sWAAAAAAAAAADb29sHyMjIF9HR0UPQ0NCO0dHRxtPT
        0+rQ0ND5zs7O8MrKysXHx8d2vr6+dr29vcXExMTx09PT+tnZ2f/Y2Nj/zs7O+rm5ufGsrKzFra2tdq+v
        r3axsbHFsrKy8LOzs/mxsbHqq6urxqWlpY6cnJxDhYWFF5KSkgcAAAAAAAAAAAAAAAAAAAAA0dHRHMrK
        ylfOzs6Iy8vLssrKysHHx8e2xcXFicbGxjq/v79IwMDAssfHx+3W1tb53Nzc/9zc3P/R0dH5ubm57ays
        rLKqqqpIq6urOqmpqYmmpqa2paWlwaOjo7KhoaGInp6eV6SkpBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADGxsYJysrKHc7OzjTLy8tPysrKV8jIyErAwMA1xcXFFr+/v0DCwsKwysrK7tra2vng4OD/4ODg/9PT
        0/m4uLjuqampsKenp0Curq4WqKioNaWlpUqkpKRXpaWlT52dnTSenp4dqqqqCQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA29vbB8jIyBfMzMwZzMzMD7+/vwiqqqoDw8PDM8PDw5bMzMzR19fX5dzc
        3O/b29vv0NDQ5bm5udGsrKyWqqqqM6qqqgOfn58IqqqqD6OjoxmmpqYXtra2BwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8C29vbB7+/vwjMzMwF////AgAAAAHBwcEhxsbGY8fH
        x5fLy8u8y8vLz8rKys/Gxsa8u7u7l7S0tGOysrIhAAAAAX9/fwKZmZkFn5+fCLa2tgd/f38CAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrK
        yhjExMRKxMTEesLCwqjBwcG/wMDAv7+/v6i8vLx6urq6Sr+/vxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/8P///+B////AP///wD//4MAwf8DAMD/AAAA/gAAAH4AAAB/AA
        AA/wAAAP8AAADwABgAAAA8AAAAfgAAAP8AAAD/AAAAfgAAADwAAAAYAA8AAAD/AAAA/wAAAP4AAAB+AA
        AAfwAAAP8DAMD/gwDB//8A////AP///4H////D//
</value>
  </data>
</root>